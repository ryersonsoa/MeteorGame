#include "LPD8806.h"
#include "SPI.h"

int clockPin = 3;
int dataPin = 2;
int potPin=A2;

LPD8806 strip = LPD8806(96, dataPin, clockPin);

unsigned long timerM1=900, timerM2=1100, timerM3=1800, timerM4=1500;
int met1On=0,met2On=1, met3On=0;
int r2=0,r3=0,r4=0,r5=0,r6=0,r7=0,r8=0,r9=0,r10=0;


int round1=100,round2=90,round3=80,round4=70,round5=60,round6=50,round7=40,round8=30,round9=20,round10=10;
int delayTime=100;

int metGenerated=0;
int val;

int LeftButton = 7;
int RightButton = 4;
int moveLeft, moveRight;
int lbPrev=0, rbPrev=0, bufferTimer;

int mothershipLed,msPrevLed;
int ms[]={
  15,0};

int met1[]={
  0,0};
int met1Led=100;
int met2[]={
  0,0};
int met2Led=100;
int met3[]={
  0,0};
int met3Led=100;
int met4[]={
  0,0}
, met4Led=100, clearLed4=100, met4On=0;
int clearLed1=100,clearLed2=100,clearLed3=100;

void clearStrip(){
  for (int i=0; i<96;i++){
    strip.setPixelColor(i, 0,0,0);
  }
  strip.show();
}

void setup(){
  Serial.begin(9600);
  strip.begin();
  strip.show();
  randomSeed(analogRead(0));
  pinMode(LeftButton, INPUT);
  pinMode(RightButton, INPUT);

}

void loop(){

 moveShip();

  //tiggers each meteor to fall
  if ((millis()%timerM1)>(timerM1/2)&&met1On!=1){
    met1On=1;
    metGenerated=metGenerated+1;
  }
  if ((millis()%timerM2)>(timerM2/2)&&met2On!=1){
    met2On=1;
    metGenerated=metGenerated+1;
  }
  if ((millis()%timerM3)>(timerM3/2)&&met3On!=1){
    met3On=1;
    metGenerated=metGenerated+1;
  } 
  if ((millis()%timerM4)>(timerM4/2)&&met4On!=1){
    met4On=1;
    metGenerated=metGenerated+1;
  }

  //assign leds for each meteor once at the start
  while(met1Led==100){
    do{
      met1[1]=random(0,6);
    }
    while(met1[1]%2!=0);
    met1Led = met1[1]+15+met1[1]*15;
  }

  while(met4Led==100){
    do{
      met4[1]=random(0,6);
    }
    while(met4[1]%2!=0);
    met4Led = met4[1]+15+met4[1]*15;
  }

  while(met2Led==100){
    do{
      met2[1]=random(0,6);
    }
    while(met2[1]%2==0);
    met2Led = met2[1]+15+(met2[1]-1)*15;
  }

  while(met3Led==100){
    do{
      met3[1]=random(0,6);
    }
    while(met3[1]%2==0);
    met3Led = met3[1]+15+(met3[1]-1)*15;
  }

  //when meteors reach the last row
  if (met1On==1&&met1[0]==15){
    met1On=0;
    strip.setPixelColor(met1Led,0,0,0);
    met1Led=100;
    met1[0]=0;
    met1[1]=0;
  }
  if (met4On==1&&met4[0]==15){
    met4On=0;
    strip.setPixelColor(met4Led,0,0,0);
    met4Led=100;
    met4[0]=0;
    met4[1]=0;
  }
  if (met2On==1&&met2[0]==15){
    met2On=0;
    strip.setPixelColor(met2Led,0,0,0);
    met2Led=100;
    met2[0]=0;
    met2[1]=0;
  }
  if (met3On==1&&met3[0]==15){
    met3On=0;
    strip.setPixelColor(met3Led,0,0,0);
    met3Led=100;
    met3[0]=0;
    met3[1]=0;
  }

  //meteors moving down the board
  //meteor one
  if (met1On==1){
    met1Led=met1Led-1;
    clearLed1=met1Led+1;
    met1[0]=met1[0]+1;
  }
  //meteor two
  if (met2On==1){
    met2Led=met2Led+1;
    clearLed2=met2Led-1;
    met2[0]=met2[0]+1;
  }
  //meteor three
  if (met3On==1){
    met3Led=met3Led+1;
    clearLed3=met3Led-1;
    met3[0]=met3[0]+1;
  }
  //meteor four
  if (met4On==1){
    met4Led=met4Led-1;
    clearLed4=met4Led+1;
    met4[0]=met4[0]+1;
  }

  //clears the led once mothership moves to a new one
  if (msPrevLed!=mothershipLed){
    strip.setPixelColor (msPrevLed,0,0,0);
  }

  strip.setPixelColor (mothershipLed,0,0,100);
  strip.setPixelColor (met1Led,127,127,127);
  strip.setPixelColor (met2Led,127,127,127);
  strip.setPixelColor (met3Led,127,127,127);
  strip.setPixelColor (met4Led,127,127,127);
  strip.setPixelColor (clearLed1,0,0,0);
  strip.setPixelColor (clearLed2,0,0,0);
  strip.setPixelColor (clearLed3,0,0,0);
  strip.setPixelColor (clearLed4,0,0,0);
  strip.show();

  msPrevLed=mothershipLed;

  //when mothership meets a meteor
  if (mothershipLed==met1Led||mothershipLed==met2Led||mothershipLed==met3Led||mothershipLed==met4Led){
    for(int i=0;i<5;i++){
      strip.setPixelColor(mothershipLed,100,0,0);
      strip.show();
      delay(50);
      strip.setPixelColor(mothershipLed,0,0,0);
      strip.show();
      delay(50);
    } 
    delayTime=100;
    metGenerated=0;
    restartVariables();
    newRound();
  }
  delay(delayTime); 

  //when game goes into a new round
  if (metGenerated>15&&metGenerated<=35){
    delayTime=90;
    while(r2==0){
      for (int i=95;i>93;i--){
        strip.setPixelColor(i, 0,100,0);
      }
      strip.show();
      delay(1000);
      for (int i=95;i>93;i--){
        strip.setPixelColor(i, 0,0,0);
      }
      strip.show();
      delay(500);
      restartVariables();
      r2=r2+1;
    }
  }
  if (metGenerated>35&&metGenerated<=60){
    delayTime=80;
    while(r3==0){
      for (int i=95;i>92;i--){
        strip.setPixelColor(i, 0,100,0);
      }
      strip.show();
      delay(1000);
      for (int i=95;i>92;i--){
        strip.setPixelColor(i, 0,0,0);
      }
      strip.show();
      delay(500);
      restartVariables();
      r3=r3+1;
    }
  }
  if (metGenerated>60&&metGenerated<=90){
    delayTime=70;
    while(r4==0){
      for (int i=95;i>91;i--){
        strip.setPixelColor(i, 0,100,0);
      }
      strip.show();
      delay(1000);
      for (int i=95;i>91;i--){
        strip.setPixelColor(i, 0,0,0);
      }
      strip.show();
      delay(500);
      restartVariables();
      r4=r4+1;
    }
  }
  if (metGenerated>90&&metGenerated<=125){
    delayTime=60;
    while(r5==0){
      for (int i=95;i>90;i--){
        strip.setPixelColor(i, 0,100,0);
      }
      strip.show();
      delay(1000);
      for (int i=95;i>90;i--){
        strip.setPixelColor(i, 0,0,0);
      }
      strip.show();
      delay(500);
      restartVariables();
      r5=r5+1;
    }
  }
  if (metGenerated>125&&metGenerated<=165){
    delayTime=50;
    while(r6==0){
      for (int i=95;i>89;i--){
        strip.setPixelColor(i, 0,100,0);
      }
      strip.show();
      delay(1000);
      for (int i=95;i>89;i--){
        strip.setPixelColor(i, 0,0,0);
      }
      strip.show();
      delay(500);
      restartVariables();
      r6=r6+1;
    }
  }
  if (metGenerated>165&&metGenerated<=210){
    delayTime=40;
    while(r7==0){
      for (int i=95;i>88;i--){
        strip.setPixelColor(i, 0,100,0);
      }
      strip.show();
      delay(1000);
      for (int i=95;i>88;i--){
        strip.setPixelColor(i, 0,0,0);
      }
      strip.show();
      delay(500);
      restartVariables();
      r7=r7+1;
    }
  }
  if (metGenerated>210&&metGenerated<=260){
    delayTime=30;
    while(r8==0){
      for (int i=95;i>87;i--){
        strip.setPixelColor(i, 0,100,0);
      }
      strip.show();
      delay(1000);
      for (int i=95;i>87;i--){
        strip.setPixelColor(i, 0,0,0);
      }
      strip.show();
      delay(500);
      restartVariables();
      r8=r8+1;
    }
  }
  if (metGenerated>260&&metGenerated<=315){
    delayTime=20;
    while(r9==0){
      for (int i=95;i>86;i--){
        strip.setPixelColor(i, 0,100,0);
      }
      strip.show();
      delay(1000);
      for (int i=95;i>86;i--){
        strip.setPixelColor(i, 0,0,0);
      }
      strip.show();
      delay(500);
      restartVariables();
      r9=r9+1;
    }
  }
  if (metGenerated>315){
    delayTime=10;
    while(r10==0){
      for (int i=95;i>85;i--){
        strip.setPixelColor(i, 0,100,0);
      }
      strip.show();
      delay(1000);
      for (int i=95;i>85;i--){
        strip.setPixelColor(i, 0,0,0);
      }
      strip.show();
      delay(500);
      restartVariables();
      r10=r10+1;
    }
  }
  if (metGenerated==350){
    for (int i=0;i<96;i++){
      strip.setPixelColor (i,0,100,0);
    }
    strip.show();
    delay(5000);
    restartVariables();
    newRound();
  }

}

void restartVariables(){
  met1On=0;
  strip.setPixelColor(met1Led,0,0,0);
  met1Led=100;
  met1[0]=0;
  met1[1]=0;

  met4On=0;
  strip.setPixelColor(met4Led,0,0,0);
  met4Led=100;
  met4[0]=0;
  met4[1]=0;

  met2On=0;
  strip.setPixelColor(met2Led,0,0,0);
  met2Led=100;
  met2[0]=0;
  met2[1]=0;

  met3On=0;
  strip.setPixelColor(met3Led,0,0,0);
  met3Led=100;
  met3[0]=0;
  met3[1]=0;
}

void newRound(){
  r2=0;
  r3=0;
  r4=0;
  r5=0;
  r6=0;
  r7=0;
  r8=0;
  r9=0;
  r10=0;
}

void moveShip(){

  if (metGenerated<=60){
    bufferTimer=2;
  }
  else if(60<metGenerated<=210){
    bufferTimer=4;
  }
  else{
    bufferTimer=6;
  }

  if (digitalRead(RightButton)==HIGH&&rbPrev<=0){
    rbPrev=bufferTimer;
    //  delay(10);
    if (ms[1]!=5){
      ms[1]=ms[1]+1;
      if (ms[1]%2==0){
        mothershipLed=(ms[1]/2)*32;
      }
      if (ms[1]%2!=0){
        mothershipLed=((ms[1]+1)/2)*32-1;
      }
    } 
   
  }
  else{
    if (digitalRead(LeftButton)==LOW){
      rbPrev=0;
    }
    rbPrev=rbPrev-1;
  }

  if (digitalRead(LeftButton)==HIGH&&lbPrev<=0){
    //  delay(10);
    lbPrev=bufferTimer;
    if(ms[1]!=0){
      ms[1]=ms[1]-1;
      if (ms[1]%2==0){
        mothershipLed=(ms[1]/2)*32;
      }
      if (ms[1]%2!=0){
        mothershipLed=((ms[1]+1)/2)*32-1;
      }
    }
  }
  else{
    if (digitalRead(LeftButton)==LOW){
      lbPrev=0;
    }
    lbPrev=lbPrev-1;
  }
  
}
